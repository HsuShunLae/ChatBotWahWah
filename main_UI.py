# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'form.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QMovie
from ListenPy import Listen
from SpeakOffline import Speak
from DataOnline import Online_Scraper
from Chat import Chat
from chatGPT import ChatGpt,messages as gms
import threading
# import GUI_rc


class Ui_MainUI(object):
    def setupUi(self, MainUI):
        MainUI.setObjectName("MainUI")
        MainUI.resize(900, 600)
        MainUI.setMinimumSize(QtCore.QSize(900, 600))
        MainUI.setMaximumSize(QtCore.QSize(900, 600))
        MainUI.setStyleSheet("background-color: rgb(0, 0, 0);")
        self.label_2 = QtWidgets.QLabel(MainUI)
        self.label_2.setGeometry(QtCore.QRect(0, 60, 900, 451))
        # self.label_2.setGeometry(QtCore.QRect(0, 0, 900, 600))
        # self.label_2.setText("")
        self.label_2.setPixmap(QtGui.QPixmap("resource_UI/resource_UI/main_UI.gif"))
        self.label_2.setScaledContents(True)
        self.label_2.setObjectName("label_2")

        self.label_2.setMovie(QMovie("resource_UI/resource_UI/main_UI.gif"))
        self.label_2.movie().start()
        
        self.label_3 = QtWidgets.QLabel(MainUI)
        self.label_3.setGeometry(QtCore.QRect(120, 0, 781, 61))
        self.label_3.setText("")
        self.label_3.setPixmap(QtGui.QPixmap("../../WahWah/templates/srUI.gif"))
        self.label_3.setScaledContents(True)
        self.label_3.setObjectName("label_3")
        self.pushButton = QtWidgets.QPushButton(MainUI)
        self.pushButton.setGeometry(QtCore.QRect(350, 510, 91, 81))
        self.pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton.setStyleSheet("border-image: url(resource_UI/resource_UI/button.gif);\n"
"background-color:transparent;")

        # self.movie = QMovie("resource_UI/resource_UI/button.gif")
        # self.movie.start()

        self.pushButton.clicked.connect(self.on_start)

        self.pushButton.setText("")
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(MainUI)
        self.pushButton_2.setGeometry(QtCore.QRect(460, 510, 91, 81))
        self.pushButton_2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_2.setStyleSheet("border-image: url(resource_UI/resource_UI/stop_Black.png);\n"
"background-color:transparent;")
        self.pushButton_2.setText("")
        self.pushButton_2.setObjectName("pushButton_2")

        self.stop = False
        self.pushButton_2.clicked.connect(self.on_stop)

        self.label = QtWidgets.QLabel(MainUI)
        self.label.setGeometry(QtCore.QRect(10, 0, 111, 61))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("resource_UI/resource_UI/colorful DB Logo no bg.png"))
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        self.pushButton_3 = QtWidgets.QPushButton(MainUI)
        self.pushButton_3.setGeometry(QtCore.QRect(800, 510, 91, 81))
        self.pushButton_3.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_3.setStyleSheet("border-image: url(resource_UI/resource_UI/exit.jpg);\n"
"background-color:transparent;")
        self.pushButton_3.setText("")
        self.pushButton_3.setObjectName("pushButton_3")

        self.pushButton_3.clicked.connect(exit)

        self.retranslateUi(MainUI)
        QtCore.QMetaObject.connectSlotsByName(MainUI)

    def retranslateUi(self, MainUI):
        _translate = QtCore.QCoreApplication.translate
        MainUI.setWindowTitle(_translate("MainUI", "MainUI"))

    def on_start(self):
        self.stop = False
        threading.Thread(target=self.chat).start()
        # message = QtWidgets.QMessageBox()
        # message.setText(text)
        # message.exec_()
    def on_stop(self):
        self.stop = True

    def chat(self):
        while not self.stop:
                text = Listen()
                reply = Online_Scraper(text)
                if reply is not None:
                        Speak(reply)
                elif Chat(text)[1] > 0.89:
                        reply = Chat(text)[0]
                        Speak(reply)
                else:
                        gms.append({"role": "user", "content": text})
                        reply=ChatGpt(text + " ***reply like tony stark jarvis in less words and don't write code***")
                        Speak(reply)
                


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainUI = QtWidgets.QWidget()
    ui = Ui_MainUI()
    ui.setupUi(MainUI)
    MainUI.show()
    sys.exit(app.exec_())
